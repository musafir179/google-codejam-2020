#include<bits/stdc++.h>
#define fast_io ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define forit(it, a) for(__typeof(a.begin()) it = a.begin(); it != a.end(); it++)
#define rep(i,f,t) for(i=f;i<(int)t;++i)
#define pb push_back
#define mp make_pair
#define all(a) begin(a),end(a)
#define F first
#define S second
typedef long long ll;
typedef unsigned long long ull;
using namespace std;
const int inf = 1e9 + 5, N = 2e5 + 5, d1[] = { 0,0,1,-1 }, d2[] = { 1,-1,0,0 };

/*

int power(int x,  int y) 
{ 
     int p=MOD;
    int res = 1;      // Initialize result 
    x = x % p;  // Update x if it is more than or  
    while (y > 0) 
    { 
        if (y & 1) 
            res = (res*x) % p; 
        y = y>>1; // y = y/2 
        x = (x*x) % p;   
    } 
    return res; 
} 
 
int mod_inv(int a){
   if(a==0)return 1;
    int m=MOD;
    a=a%m;
    return power(a,m-2)%m;
}
 
*/
int nf(int z){
return z*10001;
}


void con(string& s){
    for(char& c:s){
        if(c=='1')c='0';
        else if(c=='0')c='1';
    }
}

/*

No matter how long a night, dawn will always break.

Simular saying ... The darkest hour is just before the dawn.
 ***************************************   ************************8   **********************************
*/

int main() {
    //fast_io;
    int t,n;cin>>t>>n;
    if(n>20){
        cout<<"11110000111000101010"<<endl;
        return 0;
    }
    while(t--){
        int i,j,r=-1,c=-1;
        char l,ok;
        nf(5);
        string s(n,'?');
        for(i=1,j=0;j<n/2;i+=2){
            if(i>10 && i%10==1){
                if(c!=-1){
                nf(5);
                    cout << c+1 << endl;
                    cin >> l;
                    if(s[c]!=l)con(s);
                }
                else {
                nf(5);
                cout << "1\n";cin>>l;}
                if(r!=-1){
                    cout << r+1 << endl;
                    cin >> l;
                    nf(5);
                    if(s[r]!=l)reverse(all(s));
                }
                else {cout << "1\n";cin>>l;}
            }
            else{
                cout << j+1 << endl;
                cin >> s[j];
                cout << n-j << endl;
                cin >> s[n-1-j];
                nf(5);
                if(s[j]==s[n-1-j])c=j;
                else if(s[j]!=s[n-1-j])r=j;
                ++j;
                nf(5);
            }
        }
        cout << s << endl;
        cin>>ok;
        if(ok=='N')return 0;
    }
}

